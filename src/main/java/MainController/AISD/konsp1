15.09.2017
Алгоритмы. Основні поняття
Алгоритм – це послідовність дій (команд, інструкцій) для вирішення певної задачі.
Алгоритм вважається процедурним рішенням задач.
етапи проектування і аналіз алгоритмів:
1)	Розуміння задачі;
2)	Вибір:
a.	Програмні засоби;
b.	Обчислювальна техніка;
c.	Точний чи наближений результат;
d.	Структура даних;
3)	Проектування алгоритму:
a.	Перевірка базових алгоритмів;
b.	Проектування свого алгоритму;
4)	Оцінка коректності алгоритму;
5)	Оцінка ефективності алгоритму:
a.	Просторова;
b.	Часова;
6)	Реалізація в програмі;
Властивості алгоритму:
1.	Детермінованість – визначеність кроків алгоритму, тобто після кожного кроку або зазначається, який крок буде наступним, або дається команда на зупинку;
2.	Масовість – він може бути використаний для розв’язання цілого ряду задач одного типу;
3.	Результативність – виконання алгоритму має або закінчуватись результатом, або інформацією про те, чому не може бути одержаний результат, при цьому множина кроків алгоритму є скінченою;
4.	Зрозумілість – має бути зрозумілим конкретному виконавцю алгоритму;
5.	Дискретність – можливість розкриття алгоритму на скінчену кількість етапів, причому результат попереднього етапу є вхідним для наступного;
Способи опису алгоритму:
	Графічний;
	Псевдокод – перетин звичайного алфавіту з синтаксисом мови програмування;
	Словесний;
	Табличний;
Основні реалізації алгоритму:
1)	Лінійні;
2)	Розгалужені;
3)	Циклічні;
Класи алгоритмів:
1.	Інформаційний – представляє собою набір невеликих процедур, але працюють з великим обсягом інформації;
2.	Обчислювальний – працюють з простими видами даних, але сам процес обчислювання може бути довгим і складним;
3.	Керуючий – дані до них надходять з зовнішніх процесів, якими вони керують.
Базові алгоритми:
	Алгоритм роботи зі структурами даних;
	Алгоритми на графах (для дуже складних задач, таких як пошук найкоротшого шляху і т.п.);
	Алгоритми пошуку;
	Алгоритми сортування;
	Алгоритми хешування;
	Алгоритми роботи з рядками;
fenicchka@gmail.com

Складності
-	Логічна
-	Статична
-	Тимчасова
-	Ємнісна – пам’ять

Складність алгоритму – це кількісна характеристика, що відображає споживані алгоритмом ресурси під час свого виконання. Часова ефективність алгоритму визначається як функція від розміру даних шляхом підрахунку кількості виконання базових операцій.
Базова операція – робить основний внесок загальний час програми.
Залежності від впливу на функцію ефективності алгоритми бувають:
•	Кількісно-залежні (матриці);
•	Параметрично-залежні (факторіал);
•	Кількісно-параметрично-залежні (чисельні методи);
•	Порядково-залежні (сортування);
Три випадки ефективності:
1)	Кращий – ті дані, при яких час алгоритму буде найменший;
2)	Гірший – ті дані, при яких час алгоритму буде найбільшим;
3)	Базовий – вираховується класами ефективності;

Асимптотичний аналіз алгоритмів

Асимптота – математично оцінююча час виконання алгоритму підрахунком операцій.
Три види оцінки:
1.	О велике – показує час роботи алгоритму, тобто кількість операцій, яка буде максимальною при виконанні алгоритму;
2.	Омега Ω - на відміну від О, омега визначає нижню оцінку росту функції;
3.	Тета – і знизу, і зверху;
Основні класи ефективності
Позначення 	Назва 	Примітка 	Приклад
О(1)	Константа 	Час роботи алгоритму однаковий незалежно від розміру задачі	Хеш-функції
О(log(n))	Логарифмічний 	Така залежність з’являється в результаті зменшення/збільшення розміру задачі на постійне значення на кожному кроці ітерації алгоритму	Двійковий пошук
О(n)	Лінійний 	З’являється в роботі зі списками. Подвоєння розміру задачі подвоїть час роботи	Лінійний пошук
Операції з n елементами
О(n*log(n))	Лінійно-логарифмічний	Алгоритми декомпозиції. Подвоєння розміру задачі збільшить час трохи більше ніж вдвічі	Швидке сортування
О(n2)	Квадратичний 	Така залежність створюється коли є два вкладених цикла.	Прості види сортування
О(n3)	Кубічний 	Три вкладених цикли.	Перемноження матриць
О(2n)	Експоненціальний 	Обробка елементів множини.	Пошук повним перебором
O(n!)	Факторіальний	Перестановки підмножин в множини n елементів.	Робота з множинами



